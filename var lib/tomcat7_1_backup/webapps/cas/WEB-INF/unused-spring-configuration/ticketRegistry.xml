<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to Apereo under one or more contributor license agreements. 
	See the NOTICE file distributed with this work for additional information 
	regarding copyright ownership. Apereo licenses this file to you under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at the 
	following location: http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
              http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
              http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<description>
		Configuration for the default TicketRegistry which stores
		the tickets in-memory and
		cleans them out as specified
		intervals. 
	</description>

	<!-- Ticket Registry -->
	<bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.DefaultTicketRegistry"/>

<!-- 	<bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.MemCacheTicketRegistry" -->
<!-- 		c:client-ref="memcachedClient" c:ticketGrantingTicketTimeOut="${tgt.maxTimeToLiveInSeconds}" -->
<!-- 		c:serviceTicketTimeOut="${st.timeToKillInSeconds}" /> -->
<!-- 	<bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean" -->
<!-- 		p:servers="${memcached.servers}" p:protocol="${memcached.protocol}" -->
<!-- 		p:locatorType="${memcached.locatorType}" p:failureMode="${memcached.failureMode}" -->
<!-- 		p:transcoder-ref="kryoTranscoder"> -->
<!-- 		<property name="hashAlg"> -->
<!-- 			<util:constant -->
<!-- 				static-field="net.spy.memcached.DefaultHashAlgorithm.${memcached.hashAlgorithm}" /> -->
<!-- 		</property> -->
<!-- 	</bean> -->
<!-- 	<bean id="kryoTranscoder" -->
<!-- 		class="org.jasig.cas.ticket.registry.support.kryo.KryoTranscoder" -->
<!-- 		init-method="initialize" c:initialBufferSize="8192" /> -->

	<!-- <bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.EhCacheTicketRegistry" 
		p:serviceTicketsCache-ref="serviceTicketsCache" p:ticketGrantingTicketsCache-ref="ticketGrantingTicketsCache" 
		/> <bean id="abstractTicketCache" abstract="true" class="org.springframework.cache.ehcache.EhCacheFactoryBean" 
		p:cacheManager-ref="cacheManager" p:diskExpiryThreadIntervalSeconds="0" p:diskPersistent="false" 
		p:eternal="false" p:maxElementsInMemory="10000" p:maxElementsOnDisk="20000" 
		p:memoryStoreEvictionPolicy="LRU" p:overflowToDisk="true" p:bootstrapCacheLoader-ref="ticketCacheBootstrapCacheLoader" 
		/> <bean id="serviceTicketsCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean" 
		parent="abstractTicketCache" p:cacheName="cas_st" p:timeToIdle="0" p:timeToLive="300" 
		p:cacheEventListeners-ref="ticketRMISynchronousCacheReplicator" /> <bean 
		id="ticketGrantingTicketsCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean" 
		parent="abstractTicketCache" p:cacheName="cas_tgt" p:timeToIdle="0" p:timeToLive="7201" 
		p:cacheEventListeners-ref="ticketRMIAsynchronousCacheReplicator" /> <bean 
		id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
		p:configLocation="classpath:ehcache-replicated.xml" p:shared="false" p:cacheManagerName="ticketRegistryCacheManager" 
		/> <bean id="ticketRMISynchronousCacheReplicator" class="net.sf.ehcache.distribution.RMISynchronousCacheReplicator" 
		c:replicatePuts="true" c:replicatePutsViaCopy="true" c:replicateUpdates="true" 
		c:replicateUpdatesViaCopy="true" c:replicateRemovals="true" /> <bean id="ticketRMIAsynchronousCacheReplicator" 
		class="net.sf.ehcache.distribution.RMIAsynchronousCacheReplicator" parent="ticketRMISynchronousCacheReplicator" 
		c:replicationInterval="10000" c:maximumBatchSize="100" /> <bean id="ticketCacheBootstrapCacheLoader" 
		class="net.sf.ehcache.distribution.RMIBootstrapCacheLoader" c:asynchronous="true" 
		c:maximumChunkSize="5000000" /> -->


	<!--Quartz -->
	<!-- TICKET REGISTRY CLEANER -->
	<bean id="ticketRegistryCleaner"
		class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner"
		c:centralAuthenticationService-ref="centralAuthenticationService"
		c:ticketRegistry-ref="ticketRegistry" />

	<bean id="jobDetailTicketRegistryCleaner"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="ticketRegistryCleaner" p:targetMethod="clean" />

	<bean id="triggerJobDetailTicketRegistryCleaner"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"
		p:jobDetail-ref="jobDetailTicketRegistryCleaner" p:startDelay="20000"
		p:repeatInterval="5000000" />
</beans>
