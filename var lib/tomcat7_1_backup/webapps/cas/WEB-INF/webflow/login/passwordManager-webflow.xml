<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<!-- | There are 5 ways to use this subflow: | - changePassword | - forceChangePassword 
		| - forgotPassword | - setupSecurityQuestion | - passwordWarn + -->
	<var name="chgpwdBean" class="com.antruak.cas.pm.flow.model.ChangePasswordBean" />
	<var name="pwdMgrTask" class="java.lang.String" />

	<input name="pmTask" type="java.lang.String" required="true" />

	<input name="credentials" type="org.jasig.cas.authentication.principal.Credentials"
		required="false" />
	<input name="service" type="java.lang.String" required="false" /> <!-- rarely used ?? -->
	<input name="expireHours" type="java.lang.Integer" required="false" />

	<decision-state id="checkAuth">
		<if test="credentials != null" then="initAuthService" />
		<if test="flowScope.pmTask eq 'validateToken'" then="validateToken"
			else="initUnAuthService" />
	</decision-state>

	<decision-state id="initUnAuthService">
		<if test="pmTask eq 'reset_password'" then="forgotPassword" />
		<if test="pmTask eq 'activate'" then="activateAccount" />
	</decision-state>

	<decision-state id="initAuthService">
		<if test="pmTask eq 'changePassword'" then="changePassword" />
		<if test="pmTask eq 'forceChangePassword'" then="forceChangePassword" />
		<if test="pmTask eq 'passwordWarn'" then="passwordWarn" />
	</decision-state>


	<decision-state id="changePassword">
		<if test="credentials != null and credentials.username != null"
			then="authdChangePassword" else="changePasswordView" />
	</decision-state>

	<action-state id="forceChangePassword">
		<transition to="setPassword">
			<set name="flowScope.pwdChangeForced" value="true" />
			<set name="flowScope.username" value="credentials.username" />
		</transition>
	</action-state>

	<action-state id="authdChangePassword">
		<set name="flowScope.username" value="credentials.username" />
		<transition to="changePasswordView" />
	</action-state>

	<action-state id="validateToken">
		<set name="flowScope.mtoken" value="requestParameters.mtoken" />
		
		<transition to="checkTokenEntry">
			<set name="pwdMgrTask" value="'validateToken'" />
		</transition>
	</action-state>

	<view-state id="preValidateToken_view" view="casPmForgotPassword"
		model="netIdBean">
		<var name="netIdBean" class="com.antruak.cas.pm.flow.model.NetIdBean" />
		<binder>
			<binding property="netId" />
		</binder>
		<transition on="submitId" to="checkTokenEntry">
			<set name="requestScope.forgotPasswordValidationError" value="true" />
			<set name="flowScope.username" value="netIdBean.netId" />
			<!-- <evaluate -->
			<!-- expression="flowScope.username != null and recaptchaValidationAction.validateCaptcha(flowRequestContext)"/> -->
			<evaluate expression="lockoutService.allowAttempt(flowScope.username)" />
		</transition>
		<transition to="helpDeskView" on-exception="com.antruak.cas.pm.UserLockedOutException">
			<evaluate
				expression="casMsgHelper.addMessage(messageContext,'screen.logindelay.message.1','Maaf System Belum dapat diakses, illegal access attempt detected')" />
		</transition>

		<transition to="helpDeskView" on-exception="java.lang.Exception">
			<evaluate
				expression="casMsgHelper.addMessage(messageContext,'cas.security.identity.not.exist','Identitas Tidak Ditemukan')" />
		</transition>
	</view-state>

	<!-- Change password view prompting for old password. -->
	<view-state id="changePasswordView" view="casPmChangePassword"
		model="changePasswordBean">
		<var name="changePasswordBean" class="com.antruak.cas.pm.flow.model.ChangePasswordBean" />

		<binder>
			<binding property="username" required="false" />
			<binding property="oldPassword" />
			<binding property="newPassword" />
			<binding property="confirmNewPassword" />
		</binder>
		<on-render>
			<evaluate expression="lockoutService.allowAttempt(flowScope.username)" />
		</on-render>
		<transition on="submitChangePassword" to="passwordChanged">
			<!-- Presume error. This will cause an error message to be displayed if 
				the following evaluate expression returns false. -->
			<set name="changePasswordBean.username" value="flowScope.username" />
			<set name="requestScope.changePasswordValidationError" value="true" />
			<set name="flashScope.targetApps" value="'CAS'" />
			<!-- don't try to validate the ReCaptcha if we're authenticated -->
			<evaluate
				expression="flowScope.username != null or recaptchaValidationAction.validateCaptcha(flowRequestContext)" />
<!-- 			<evaluate -->
<!-- 				expression="processChangePasswordAction.changePassword(flowScope.username, changePasswordBean.username, -->
<!--                 changePasswordBean.oldPassword, changePasswordBean.newPassword, messageContext)" /> -->
			<set name="flowScope.pwdBean" value="changePasswordBean" />
             <evaluate
				expression="processChangePasswordAction.changePassword(flowRequestContext, messageContext)" />
            <evaluate expression="terminateSessionAction.terminate(flowRequestContext)" />
		</transition>
	</view-state>



	<view-state id="setPassword" view="casPmChangePassword"
		model="changePasswordBean">
		<var name="changePasswordBean" class="com.antruak.cas.pm.flow.model.ChangePasswordBean" />
		<binder>
			<binding property="newPassword" />
			<binding property="confirmNewPassword" />
		</binder>
		<transition on="submitChangePassword" to="setPasswordAction">
			<set name="flashScope.newPassword" value="changePasswordBean.newPassword" />
		</transition>
	</view-state>

	<action-state id="setPasswordAction">
		<evaluate
			expression="processChangePasswordAction.setPassword(flowScope.username,
                flashScope.newPassword, messageContext)" />
		<transition to="passwordSet" />
		<transition on-exception="com.antruak.cas.pm.InvalidNewPasswordException"
			to="setPassword">
		</transition>
	</action-state>

	<view-state id="passwordChanged" view="casPmChangedPassword">
		<transition to="pmlogout" />
	</view-state>

	<view-state id="generalEndView" view="casInfoView">
		<transition to="pmExit" />
	</view-state>

	<action-state id="forgotPassword">
		<set name="flowScope.otpMode" value="conversationScope.tokenType" />
		<transition to="forgotPassword_view">
			<set name="conversationScope.resendTokenAllowRepeat" value="true" />
		</transition>
	</action-state>


	<view-state id="forgotPassword_view" view="casPmForgotPassword"
		model="netIdBean">
		<var name="netIdBean" class="com.antruak.cas.pm.flow.model.NetIdBean" />
		<binder>
			<binding property="netId" />
		</binder>
		<transition on="submitId" to="lookupSecurityQuestion">
			<set
				value="securityTokenHandlerAction.getUserOTPMode(netIdBean.netId, flowRequestContext)"
				name="conversationScope.tokenType" />
			<set name="requestScope.forgotPasswordValidationError" value="true" />
			<set name="flowScope.username" value="netIdBean.netId" />
			<set name="flashScope.targetApps" value="'CAS'" />
			<!-- <evaluate -->
			<!-- expression="flowScope.username != null and recaptchaValidationAction.validateCaptcha(flowRequestContext)"/> -->
			<evaluate expression="lockoutService.allowAttempt(flowScope.username)" />
		</transition>

		<transition to="helpDeskView" on-exception="com.antruak.cas.pm.UserLockedOutException">
			<evaluate
				expression="casMsgHelper.addMessage(messageContext,'screen.logindelay.message.1','')" />
		</transition>

		<transition to="helpDeskView" on-exception="com.antruak.cas.pm.exception.UserIdException">
			<evaluate
				expression="casMsgHelper.addMessage(messageContext,'cas.security.identity.not.exist','')" />
		</transition>
	</view-state>

	<view-state id="activateAccount" view="casPmActivateAccount"
		model="chgpwdBean">

		<var name="credential"
			class="org.jasig.cas.authentication.UsernamePasswordCredential" />

		<transition on="submitId" to="checkLdapAccount">
			<set name="flashScope.chgpwdBean" value="chgpwdBean" />
			<set name="credential.username" value="chgpwdBean.username" />
			<set name="flowScope.credentials" value="credential" />
		</transition>
	</view-state>

	<action-state id="checkLdapAccount">
		<evaluate expression="ldapPasswordAction.checkLdapAccount(flowRequestContext)" />
		<transition on="success" to="forceChangePassword">
			<!-- <set name="flowScope.username" value="chgpwdBean.username" /> -->
		</transition>

		<transition to="activateAccount" />
	</action-state>

	<decision-state id="checkForgotCaptcha">
		<if test="flashScope.forgotCaptchaPass" then="lookupSecurityQuestion"
			else="forgotPassword" />
	</decision-state>
	<!-- <<### -->
	<subflow-state id="lookupSecurityQuestion" subflow="securitycheck">
		<input name="username" value="flowScope.username" type="java.lang.String" />
		<input name="tokenType" value="conversationScope.tokenType"
			type="java.lang.String" />
		<output name="securityChallenge" value="flowScope.securityChallenge"
			type="com.antruak.cas.pm.flow.SecurityChallenge" />
		<output name="tokenModeOption" value="flowScope.tokenModeOption" />
		<output name="npp" value="flowScope.npp" />
		<transition on="securitySuccess" to="selectTokenType" />
		<transition on="securityFail" to="helpDeskView">
			<evaluate
				expression="casMsgHelper.addMessage(messageContext,'cas.security.check.fail','verifikasi identitas gagal')" />
		</transition>
	</subflow-state>

	<action-state id="selectTokenType">
		<set name="flowScope.otpMode" value="conversationScope.tokenType" />
		<evaluate expression="conversationScope.tokenType" />
		<transition on="email" to="processSelectedToken">

		</transition>
		<transition on="emailgsm" to="processSelectedToken">

		</transition>
		<transition on="gsm" to="processSelectedToken">

		</transition>
		<transition on="otp" to="processSelectedToken">
		</transition>
		<transition on="otprsa" to="processSelectedToken"/>
		
	</action-state>



	<action-state id="presentRepoToken">
		<evaluate
			expression="securityTokenHandlerAction.getRepoChallenge( conversationScope.tokenType, flowScope.username, flowRequestContext)"
			result="flowScope.tokenChallenge" />
		<transition to="checkRepoTokenValid" />
		<transition on-exception="com.antruak.cas.pm.exception.TokenException"
			to="helpDeskView" />
	</action-state>

	<decision-state id="checkRepoTokenValid">
		<if test="flowScope.tokenChallenge == null" then="helpDeskView"
			else="answerSecurityToken" />
	</decision-state>


	<subflow-state id="processSelectedToken" subflow="preparetoken">
		<input name="otpMode" value="flowScope.otpMode" type="java.lang.String" />
		<input name="username" value="flowScope.username" type="java.lang.String" />
		<input name="securityChallenge" value="flowScope.securityChallenge"
			type="com.antruak.cas.pm.flow.SecurityChallenge" />
		<output name="tokenChallenge" type="com.antruak.cas.pm.flow.SecurityChallenge" />

		<transition on="prepareSuccess" to="casCheckTFAToken" />
		<transition on="continueSession" to="answerSecurityToken" />
		<transition on="prepareFail" to="helpDeskView" />
	</subflow-state>


	<!-- #### << Check Token -->

	<action-state id="checkTokenEntry">
		<evaluate
			expression="securityTokenHandlerAction.prepareUrlTokenChallenge(flowScope.mtoken, flowRequestContext)"
			result="flowScope.tokenChallenge" />
		<transition to="checkRepoTokenValid" />
	</action-state>

	<decision-state id="urlTokenValid">
		<if test="flowScope.tokenChallenge == null" then="helpDeskView"
			else="answerSecurityToken" />
	</decision-state>

	<subflow-state id="answerSecurityToken" subflow="answertoken">
		<input name="otpMode" value="flowScope.otpMode" type="java.lang.String" />
		<input name="username" value="flowScope.username" type="java.lang.String" />
		<input name="tokenChallenge" value="flowScope.tokenChallenge"
			type="com.antruak.cas.pm.flow.SecurityChallenge" />
		<transition on="answerSuccess" to="setPassword" />
		<transition on="answerFail" to="helpDeskView" />
		<transition on="resendToken" to="checkResendTokenRepeat">

		</transition>
	</subflow-state>

	<decision-state id="checkResendTokenRepeat">
		<if test="conversationScope.resendTokenAllowRepeat" then="resendTokenRetry"
			else="helpDeskView" />
	</decision-state>

	<action-state id="resendTokenRetry">
		<set name="conversationScope.resendTokenAllowRepeat" value="false" />
		<transition to="selectTokenType" />
	</action-state>
	<!-- #### >> Check Token -->

	<!-- Token Response -->
	<!-- <view-state id="answerSecurityTokenX" view="casPmAnswerSecurityToken"> -->

	<!-- QR -->

	<action-state id="preSetupSecurityQuestion">
		<set name="flowScope.username" value="credentials.username" />
		<transition to="setupSecurityQuestion" />
	</action-state>

	<view-state id="setupSecurityQuestion" view="casPmSetupSecurityQuestion"
		model="securityQuestion">
		<var name="securityQuestion" class="com.antruak.cas.pm.flow.model.SecurityQuestionBean" />
		<binder>
			<binding property="questionText" />
			<binding property="responseText" />
		</binder>
		<transition on="setupSubmit" to="pmExit">
			<evaluate
				expression="processSecurityQuestionSetupAction.setSecurityQuestion(username,securityQuestion,messageContext)" />
		</transition>
	</view-state>

	<!-- <action-state id="processSecurityQuestionSetup"> <evaluate expression="processSecurityQuestionSetupAction" 
		/> <transition on="success" to="pmExit" /> <transition on="error" to="setupSecurityQuestion" 
		/> </action-state> -->

	<view-state id="passwordWarn" view="casWarnPassView">
		<transition on="changePassword" to="authdChangePassword" />
		<transition on="ignore" to="pmExit" />
	</view-state>

	<end-state id="helpDeskView" view="casPmHelpDesk">
		<on-entry>
			<evaluate
				expression="securityTokenHandlerAction.processException(flowRequestContext, rootCauseException)" />
		</on-entry>
	</end-state>

	<action-state id="casCheckTFAToken">
		<set name="flashScope.msgType" value="'general'" />

		<transition to="generalEndView">
			<set name="flashScope.msgKey" value="'cas.pm.seeEmailToContinue'" />
		</transition>
	</action-state>

	<!-- <view-state id="passwordSet" view="casPmSetPassword"> -->
	<!-- <transition to="pmlogout" /> -->
	<!-- </view-state> -->

	<end-state id="passwordSet" view="externalRedirect:logout" />

	<view-state id="lockedOut" view="casPmLockedOut">
		<transition to="pmExit" />
	</view-state>


	<end-state id="pmlogout" />
	<end-state id="pmExit" />
	<global-transitions>
		<transition to="helpDeskView" on-exception="java.lang.Exception" />
	</global-transitions>
</flow>

